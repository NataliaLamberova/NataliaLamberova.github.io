set.seed(1234)
if (!require("pacman")) install.packages("pacman")
#install.packages("experiment")
p_load(readr, dplyr,lubridate,magrittr,textreadr,rebus,data.table, tidyr, coefplot,stringdist,plyr,bit64,stargazer,openxlsx,purrr,stringr,AER)
dat<-fread("prepared_data.csv")
o1<-aggregate(dat[, c("pass_length","force_majeure","score.2017","civil","UR_share","art_236" ,"art_632","misinformation" ,"with_covid","ex_deaths","population_2019","reg_disttomoscow","reg_autoroadden","reg_railroadden","reg_buses","reg_area","months_til_el","from_covid")], list(dat$reg_name), mean)
reg0<-lm(data=o1,ex_deaths~population_2019+reg_disttomoscow+reg_autoroadden+reg_railroadden+reg_buses+reg_area+months_til_el+UR_share+civil+score.2017)
reg00<-lm(data=o1,with_covid~population_2019+reg_disttomoscow+reg_autoroadden+reg_railroadden+reg_buses+reg_area+months_til_el+UR_share+civil+score.2017)
reg000<-lm(data=o1,from_covid~population_2019+reg_disttomoscow+reg_autoroadden+reg_railroadden+reg_buses+reg_area+months_til_el+UR_share+civil+score.2017)
stargazer(reg0,reg00,reg000,omit="reg_name",type="text")
dat$ex_deaths2<-dat$ex_deaths^2
s1aaa<- list(
s1ccc<-lm(data=dat,log.art_632~ex_deaths+ex_deaths2+as.factor(reg_name)+as.factor(date)),
s1ccc<-lm(data=dat,log.art_632~ex_deaths+ex_deaths:civil+as.factor(reg_name)+as.factor(date)+ex_deaths2),
s1ddd<-lm(data=dat,log.art_632~ex_deaths+ex_deaths:score.2017+as.factor(reg_name)+as.factor(date)+ex_deaths2),
s1fff<-lm(data=dat,log.art_632~ex_deaths+ex_deaths:UR_share+as.factor(reg_name)+as.factor(date)+ex_deaths2),
s1ggg<-lm(data=dat,log.art_632~ex_deaths+ex_deaths:UR_share+as.factor(reg_name)+as.factor(date)+ex_deaths:score.2017+ex_deaths:civil+ex_deaths2))
se_clust <- function(x)
coeftest(x, vcov = vcovCL, cluster = ~reg_name+date)[, 2]
stargazer(s1aaa, se = lapply(s1aaa, se_clust),omit=c("reg_name","date"),omit.stat=c("f","ser"))
s1ccc<-lm(data=dat,log.art_632~ex_deaths+ex_deaths2+as.factor(reg_name)+as.factor(date)
s1ggg<-lm(data=dat,log.art_632~ex_deaths+ex_deaths:UR_share+as.factor(reg_name)+as.factor(date)+ex_deaths:score.2017+ex_deaths:civil+ex_deaths2)
s1ccc<-lm(data=dat,log.art_632~ex_deaths+ex_deaths2+as.factor(reg_name)+as.factor(date))
s1ggg<-lm(data=dat,log.art_632~ex_deaths+ex_deaths:UR_share+as.factor(reg_name)+as.factor(date)+ex_deaths:score.2017+ex_deaths:civil+ex_deaths2)
p_load(ggeffects)
ggpredict(s1ccc, terms = "ex_deaths")
df_art1<-ggpredict(s1ccc, terms = "ex_deaths")
View(df_art1)
ggplot(df_art1, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)
ggplot(df_art1, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high,xmin=0), alpha = .1)
ggplot(df_art1, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()
df_art2<-ggpredict(s1ggg, terms = "ex_deaths")
ggplot(df_art2, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()
View(df_art2)
ggplot(df_art1, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("Excess deaths")+ylab("Number of Cases")
df_art2<-ggpredict(s1ggg, terms = "ex_deaths")
ggplot(df_art2, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("Excess deaths")+ylab("Number of Cases")
stargazer(s1aaa, se = lapply(s1aaa, se_clust),omit=c("reg_name","date"),omit.stat=c("f","ser"),type="text")
df_art3<-ggpredict(s1ggg, terms = c("ex_deaths","civil"))
ggplot(df_art2, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("Excess deaths")+ylab("Number of Cases")
ggplot(df_art3, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("Excess deaths")+ylab("Number of Cases")
df_art4<-ggpredict(s1ggg, terms = c("ex_deaths","UR_share"))
ggplot(df_art4, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("Excess deaths")+ylab("Number of Cases")
df_art5<-ggpredict(s1ggg, terms = c("UR_share"))
ggplot(df_art5, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("Excess deaths")+ylab("Number of Cases")
df_art6<-ggpredict(s1ggg, terms = c("civil"))
ggplot(df_art6, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("civil")+ylab("Number of Cases")
p_load(margins)
margins(s1ggg)
margins(s1ggg,"ex_deaths")
summary(margins(s1ggg, variables = "ex_deaths"))
View(df_art1)
s1aaa<- list(
s1ccc<-lm(data=dat,from_covid~ex_deaths+ex_deaths2),
s2ccc<-lm(data=dat,from_covid~ex_deaths+ex_deaths2+as.factor(reg_name)+as.factor(date)),
s3ccc<-lm(data=dat,from_covid~ex_deaths+ex_deaths:civil+as.factor(reg_name)+as.factor(date)+ex_deaths2),
s1ddd<-lm(data=dat,from_covid~ex_deaths+ex_deaths:score.2017+as.factor(reg_name)+as.factor(date)+ex_deaths2),
s1fff<-lm(data=dat,from_covid~ex_deaths+ex_deaths:UR_share+as.factor(reg_name)+as.factor(date)+ex_deaths2),
s1ggg<-lm(data=dat,from_covid~ex_deaths+ex_deaths:UR_share+as.factor(reg_name)+as.factor(date)+ex_deaths:score.2017+ex_deaths:civil+ex_deaths2))
se_clust <- function(x)
coeftest(x, vcov = vcovCL, cluster = ~reg_name+date)[, 2]
stargazer(s1aaa, se = lapply(s1aaa,se_clust),omit=c("reg_name","date"),omit.stat=c("f","ser"))
stargazer(s1aaa, se = lapply(s1aaa,se_clust),omit=c("reg_name","date"),omit.stat=c("f","ser"),type="text")
s1ccc<-lm(data=dat,from_covid~ex_deaths+ex_deaths2)
s1ccc<-lm(data=dat,from_covid~ex_deaths+ex_deaths2)
s1ggg<-lm(data=dat,from_covid~ex_deaths+ex_deaths:UR_share+as.factor(reg_name)+as.factor(date)+ex_deaths:score.2017+ex_deaths:civil+ex_deaths2)
df_art1<-ggpredict(s1ccc, terms = "ex_deaths")
ggplot(df_art1, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("Excess deaths")+ylab("Number of Cases")
df_art1<-ggpredict(s1ccc, terms = "ex_deaths")
ggplot(df_art1, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("Excess deaths")+ylab("Official Deaths")
df_art2<-ggpredict(s1ggg, terms = "ex_deaths")
ggplot(df_art2, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("Excess deaths")+ylab("Official Deaths")
df_art3<-ggpredict(s1ggg, terms = c("ex_deaths","score.2017"))
ggplot(df_art3, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("Excess deaths")+ylab("Number of Cases")
df_art3<-ggpredict(s1ggg, terms = c("score.2017"))
ggplot(df_art3, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("Excess deaths")+ylab("Number of Cases")
View(df_art1)
df_art3<-ggpredict(s1ggg, terms = c("score.2017"))
ggplot(df_art3, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("Excess deaths")+ylab("Official Deaths")
df_art4<-ggpredict(s1ggg, terms = c("UR_share"))
ggplot(df_art4, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("Excess deaths")+ylab("Official Deaths")
df_art4<-ggpredict(s1ggg, terms = c("UR_share"))
ggplot(df_art4, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("UR Share")+ylab("Official Deaths")
df_art3<-ggpredict(s1ggg, terms = c("score.2017"))
ggplot(df_art3, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("Institutions")+ylab("Official Deaths")
s1ccc<-lm(data=dat,log.art_632~ex_deaths+ex_deaths2+as.factor(reg_name)+as.factor(date))
s1ggg<-lm(data=dat,log.art_632~ex_deaths+ex_deaths:UR_share+as.factor(reg_name)+as.factor(date)+ex_deaths:score.2017+ex_deaths:civil+ex_deaths2)
p_load(ggeffects)
df_art1<-ggpredict(s1ccc, terms = "ex_deaths")
ggplot(df_art1, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("Excess deaths")+ylab("Number of Cases")+ggtitle("Model 1 Merginal Effects dy/d  excess deaths")
p_load(ggeffects)
df_art1<-ggpredict(s1ccc, terms = "ex_deaths")
ggplot(df_art1, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("Excess deaths")+ylab("Number of Cases")+ggtitle("Model 1 Merginal Effects dy/d(excess deaths)")
df_art2<-ggpredict(s1ggg, terms = "ex_deaths")
ggplot(df_art2, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("Excess deaths")+ylab("Number of Cases")+ggtitle("Model 5 Merginal Effects dy/d(excess deaths)")
df_art5<-ggpredict(s1ggg, terms = c("UR_share"))
ggplot(df_art5, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("UR share")+ylab("Number of Cases")+ggtitle("Model 5 Merginal Effects dy/d(UR share)")
df_art5<-ggpredict(s1ggg, terms = c("UR_share"))
ggplot(df_art5, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("UR share")+ylab("Number of Cases")+ggtitle("Model 5 Marginal Effects dy/d(UR share)")
df_art6<-ggpredict(s1ggg, terms = c("civil"))
ggplot(df_art6, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("civil")+ylab("Number of Cases")+ggtitle("Model 5 Marginal Effects dy/d(civil)")
a<-ggplot(df_art1, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("Excess deaths")+ylab("Number of Cases")+ggtitle("Model 1 Marginal Effects dy/d(excess deaths)")
b<-ggplot(df_art2, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("Excess deaths")+ylab("Number of Cases")+ggtitle("Model 5 Marginal Effects dy/d(excess deaths)")
c<-ggplot(df_art5, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("UR share")+ylab("Number of Cases")+ggtitle("Model 5 Marginal Effects dy/d(UR share)")
d<-ggplot(df_art6, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("civil")+ylab("Number of Cases")+ggtitle("Model 5 Marginal Effects dy/d(civil)")
p_load(patchwork)
a+b/
c+d
(a+b)/
(c+d)
s1aaa<- list(
s1ccc<-lm(data=dat,from_covid~ex_deaths+ex_deaths2),
s2ccc<-lm(data=dat,from_covid~ex_deaths+ex_deaths2+as.factor(reg_name)+as.factor(date)),
s3ccc<-lm(data=dat,from_covid~ex_deaths+ex_deaths:civil+as.factor(reg_name)+as.factor(date)+ex_deaths2),
s1ddd<-lm(data=dat,from_covid~ex_deaths+ex_deaths:score.2017+as.factor(reg_name)+as.factor(date)+ex_deaths2),
s1fff<-lm(data=dat,from_covid~ex_deaths+ex_deaths:UR_share+as.factor(reg_name)+as.factor(date)+ex_deaths2),
s1ggg<-lm(data=dat,from_covid~ex_deaths+ex_deaths:UR_share+as.factor(reg_name)+as.factor(date)+ex_deaths:score.2017+ex_deaths:civil+ex_deaths2))
s1ccc<-lm(data=dat,from_covid~ex_deaths+ex_deaths2)
s1ggg<-lm(data=dat,from_covid~ex_deaths+ex_deaths:UR_share+as.factor(reg_name)+as.factor(date)+ex_deaths:score.2017+ex_deaths:civil+ex_deaths2)
df_art1<-ggpredict(s1ccc, terms = "ex_deaths")
e<-ggplot(df_art1, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("Excess deaths")+ylab("Official Deaths")+ggtitle("Model 1 Marginal Effects dy/d(excess deaths)")
s1aaa<- list(
s1ccc<-lm(data=dat,from_covid~ex_deaths+ex_deaths2),
s2ccc<-lm(data=dat,from_covid~ex_deaths+ex_deaths2+as.factor(reg_name)+as.factor(date)),
s3ccc<-lm(data=dat,from_covid~ex_deaths+ex_deaths:civil+as.factor(reg_name)+as.factor(date)+ex_deaths2),
s1ddd<-lm(data=dat,from_covid~ex_deaths+ex_deaths:score.2017+as.factor(reg_name)+as.factor(date)+ex_deaths2),
s1fff<-lm(data=dat,from_covid~ex_deaths+ex_deaths:UR_share+as.factor(reg_name)+as.factor(date)+ex_deaths2),
s1ggg<-lm(data=dat,from_covid~ex_deaths+ex_deaths:UR_share+as.factor(reg_name)+as.factor(date)+ex_deaths:score.2017+ex_deaths:civil+ex_deaths2))
se_clust <- function(x)
coeftest(x, vcov = vcovCL, cluster = ~reg_name+date)[, 2]
stargazer(s1aaa, se = lapply(s1aaa,se_clust),omit=c("reg_name","date"),omit.stat=c("f","ser"),type="text")
df_art2<-ggpredict(s1ggg, terms = "ex_deaths")
f<-ggplot(df_art2, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("Excess deaths")+ylab("Official Deaths")+ggtitle("Model 6 Marginal Effects dy/d(excess deaths)")
df_art3<-ggpredict(s1ggg, terms = c("score.2017"))
g<-ggplot(df_art3, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("Institutions")+ylab("Official Deaths")+ggtitle("Model 6 Marginal Effects dy/d(Institutions)")
df_art4<-ggpredict(s1ggg, terms = c("UR_share"))
h<-ggplot(df_art4, aes(x, predicted)) +
geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .1)+theme_bw()+xlab("UR Share")+ylab("Official Deaths")+ggtitle("Model 6 Marginal Effects dy/d(UR share)")
(e+f)/
(g+h)
mean(dat$ex_deaths)
names<-fread("names_for_protest.csv")
dat2<-merge(dat,names,by="reg_name",keep.x=T,keep.y=T)
dat2$month<-dat2$date
protests<-fread("protests.csv")
protests$month<-as.Date(protests$month)
pre<-protests[protests$month<=as.Date("2020-03-01"),]
pre<-aggregate(pre[, c("num_protest"  ,"protest_navalny","protest_kprf"     , "protest_intervention")], list(pre$region), mean)
names(pre)<-c("region","pre_num_protest",      "pre_protest_navalny","pre_protest_kprf"        ,"pre_protest_intervention")
protests<-merge(protests,pre,by="region")
protests$month<-as.character(protests$month)
dat2$month<-as.character(dat2$month)
dat3<-merge(dat2,protests,by=c("region","month"),all.x=T)
dat3$I<-0
dat3$I[dat3$month=="2020-08-01"]<-1
dat3$I[dat3$month=="2021-01-01"]<-1
dat3$I[dat3$month=="2021-02-01"]<-1
min(protests$month)
max(protests$month)
dat3$I<-0
dat3$I[dat3$month=="2020-08-01"]<-1
dat3$I[dat3$month=="2021-01-01"]<-1
dat3$I[dat3$month=="2021-02-01"]<-1
dat3$misinformation<-dat3$ex_deaths-dat3$from_covid
s1aaa<- list(
s1ccc<-lm(data=dat3,num_protest~misinformation+I+misinformation:civil:I+misinformation:civil+misinformation:I+as.factor(reg_name)+as.factor(date)),
s1ddd<-lm(data=dat3,num_protest~misinformation+I+misinformation:score.2017:I+misinformation:score.2017+misinformation:I+as.factor(reg_name)+as.factor(date)),
s1fff<-lm(data=dat3,num_protest~misinformation+I+misinformation:score.2017:I+misinformation:I+misinformation:civil:I+misinformation:score.2017:I+as.factor(reg_name)+as.factor(date)))
se_clust <- function(x)
coeftest(x, vcov = vcovCL, cluster = ~reg_name+date)[, 2]
stargazer(s1aaa, se = lapply(s1aaa, se_clust),omit=c("reg_name","date"),type="text",omit.stat=c("f","ser"))
dat3$misinformation2<-dat3$misinformation^2
s1aaa<- list(
s1ccc<-lm(data=dat3,num_protest~misinformation+misinformation2+misinformation:civil+as.factor(reg_name)+as.factor(date)),
s1ddd<-lm(data=dat3,num_protest~misinformation+misinformation:score.2017+misinformation:score.2017+misinformation2+as.factor(reg_name)+as.factor(date)),
s1fff<-lm(data=dat3,num_protest~misinformation+misinformation:score.2017+misinformation+misinformation:civil+misinformation2+as.factor(reg_name)+as.factor(date)))
se_clust <- function(x)
coeftest(x, vcov = vcovCL, cluster = ~reg_name+date)[, 2]
stargazer(s1aaa, se = lapply(s1aaa, se_clust),omit=c("reg_name","date"),type="text",omit.stat=c("f","ser"))
dat3$num_protest[is.na(dat3$num_protest)] <- 0
dat3$num_protest
table(dat3$num_protest)
se_clust <- function(x)
coeftest(x, vcov = vcovCL, cluster = ~reg_name+date)[, 2]
dat3$misinformation2<-dat3$misinformation^2
s1aaa<- list(
s1ccc<-lm(data=dat3,num_protest~misinformation+misinformation2+misinformation:civil+as.factor(reg_name)+as.factor(date)),
s1ddd<-lm(data=dat3,num_protest~misinformation+misinformation:score.2017+misinformation:score.2017+misinformation2+as.factor(reg_name)+as.factor(date)),
s1fff<-lm(data=dat3,num_protest~misinformation+misinformation:score.2017+misinformation+misinformation:civil+misinformation2+as.factor(reg_name)+as.factor(date)))
se_clust <- function(x)
coeftest(x, vcov = vcovCL, cluster = ~reg_name+date)[, 2]
stargazer(s1aaa, se = lapply(s1aaa, se_clust),omit=c("reg_name","date"),type="text",omit.stat=c("f","ser"))
dat3$protest<-0
dat3$protest[dat3$num_protest>0]<-1
table(dat3$protest)
dat3$misinformation2<-dat3$misinformation^2
s1aaa<- list(
s1ccc<-lm(data=dat3,protest~misinformation+misinformation2+misinformation:civil+as.factor(reg_name)+as.factor(date)),
s1ddd<-lm(data=dat3,protest~misinformation+misinformation:score.2017+misinformation:score.2017+misinformation2+as.factor(reg_name)+as.factor(date)),
s1fff<-lm(data=dat3,protest~misinformation+misinformation:score.2017+misinformation+misinformation:civil+misinformation2+as.factor(reg_name)+as.factor(date)))
se_clust <- function(x)
coeftest(x, vcov = vcovCL, cluster = ~reg_name+date)[, 2]
stargazer(s1aaa, se = lapply(s1aaa, se_clust),omit=c("reg_name","date"),type="text",omit.stat=c("f","ser"))
dat3$misinformation2<-dat3$misinformation^2
s1aaa<- list(
s1ccc<-lm(data=dat3,protest~excess_deaths+from_covid+excess_deaths2+excess_deaths:civil+as.factor(reg_name)+as.factor(date)),
s1ddd<-lm(data=dat3,protest~excess_deaths+from_covid+excess_deaths:score.2017+excess_deaths:score.2017+misinformation2+as.factor(reg_name)+as.factor(date)),
s1fff<-lm(data=dat3,protest~excess_deaths+from_covid+excess_deaths:score.2017+excess_deaths+excess_deaths:civil+excess_deaths2+as.factor(reg_name)+as.factor(date)))
dat3$misinformation2<-dat3$misinformation^2
s1aaa<- list(
s1ccc<-lm(data=dat3,protest~ex_deaths+from_covid+ex_deaths2+ex_deaths:civil+as.factor(reg_name)+as.factor(date)),
s1ddd<-lm(data=dat3,protest~ex_deaths+from_covid+ex_deaths:score.2017+ex_deaths:score.2017+ex_deaths2+as.factor(reg_name)+as.factor(date)),
s1fff<-lm(data=dat3,protest~ex_deaths+from_covid+ex_deaths:score.2017+ex_deaths+ex_deaths:civil+ex_deaths2+as.factor(reg_name)+as.factor(date)))
se_clust <- function(x)
coeftest(x, vcov = vcovCL, cluster = ~reg_name+date)[, 2]
stargazer(s1aaa, se = lapply(s1aaa, se_clust),omit=c("reg_name","date"),type="text",omit.stat=c("f","ser"))
